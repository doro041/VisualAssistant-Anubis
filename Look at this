import pyttsx3 as pytt
import speech_recognition as sr
import webbrowser as wb
from time import sleep
from datetime import datetime
import pyaudio
import wikipedia
import webbrowser
import os
import subprocess
from ecapture import ecapture as ec
import wolframalpha
import json
import requests

#if __name__ = "__main_=":
#speaker.say("Hello Doro and Nikita. I am a time traveller. I came on this planet yesterday.")
#speaker.runAndWait()
#filename = "ENG_M.wav"

# open the file
# with sr.AudioFile(filename) as source:
#     # listen for the data load ausio to memory
#     audio_data = r.record(source)
#
#     # recognise from speech to text
#     text = r.recognize_google(audio_data)
#     print(text)
#     speaker.say(str(text))
#     speaker.runAndWait()

# FCN to recognize our voice and return the text_version of it
def recognise_voice():
    text = ''

    # create an instance of the Microphone class
    with sr.Microphone(device_index=8) as source:
        # adjust for ambient noise
        r.adjust_for_ambient_noise(source)

        # capture the voice
        voice = r.listen(source)

        # let's recognize it
        try:
            text = r.recognize_google(voice)
        except sr.RequestError:
            speak("Sorry, the I can't access the Google API...")
        except sr.UnknownValueError:
            speak("Sorry, Unable to recognize your speech...")
    return text.lower()


# FCN for VA to respond back
def reply(text_version):
    # name
    if "name" in text_version:
        speak("My name is Anubis")

    # how are you?
    if "how are you" in text_version:
        speak("I am fine...")
    # date
    if "date" in text_version:
        # get today's date and format it - 9 November 2020
        date = datetime.now().strftime("%d %m %Y")
        speak(date)
    # time
    if "time" in text_version:
        # get current time and format it like - 02 28
        time = datetime.now().time().strftime("%H %M")
        speak("The time is " + time)

    # search google
    if "search" in text_version:
        speak("What do you want me to search for?")
        keyword = recognise_voice()
        # if "keyword" is not empty
        if keyword != '':
            url = "https://google.com/search?q=" + keyword
            # webbrowser module to work with the webbrowser
            speak("Here are the search results for " + keyword)
            wb.open(url)
            sleep(3)

    # quit/exit
    if "quit" in text_version or "exit" in text_version:
        speak("Ok, I am going to take a nap...")
        exit()

# FCN for VA to speak
def speak(text):
  speaker.say(text)
  speaker.runAndWait()


# initialise the recogniser
r = sr.Recognizer()
speaker = pytt.init()

for index, name in enumerate(sr.Microphone.list_microphone_names()):
    print(str(index) + " - " + str(name))

sr.Re
"""
# wait a second for adjust_for_ambient_noise() to do its thing
sleep(1)

while True:
    speak("Start speaking...")

    # listen for voice and convert it into text format
    text_version = recognise_voice()
    # give "text_version" to reply() fn
    reply(text_version)
    #print(text_version)

#speaker.say("Hello Doro and Nikita. I am a time traveller. I came on this planet yesterday.")
#speaker.runAndWait()
"""
def wishMe():
    hour=datetime.datetime.now().hour
    if hour>=0 and hour<12:
        speak("Hello,it is time to be productive - Good morning - Are you ready?")
        print("Hello,it is time to be productive - Good morning - Are you ready?")
    elif hour>=12 and hour<18:
        speak("Hello,Good Afternoon - are you satisfied with your day so far?")
        print("Hello,Good Afternoon - are you satisfied with your day so far")
    else:
        speak("Hello,Good Evening - how was your day")
        print("Hello,Good Evening - how was your day")
        
def supportMe():
    speak("Are you alright.Do you need some help?If you need someone to talk to , I am here")
    print("Are you alright.Do you need some help?If you need someone to talk to , I am here")        
    
    
def takeCommand():
    r=sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        audio=r.listen(source)

        try:
            statement=r.recognize_google(audio,language='en-in')
            print(f"user said:{statement}\n")

        except Exception as e:
            speak("Excuse me, please say that again")
            return "None"
        return statement

print("Loading your AI personal assistant Anubis")
speak("Loading your AI personal assistant Anubis")
wishMe()
supportMe()

if __name__=='__main__':


    while True:
        speak("Tell me how can I help you now?")
        statement = takeCommand().lower()
        if statement==0:
            continue     
        if "good bye" in statement or "ok,bye" in statement or "stop" in statement:
            speak('your personal assistant Anubis is going to bed,Good bye')
            print('your personal assistant Anubis is going to bed,Good bye')
            break
        if 'wikipedia' in statement:
            speak('Searching Wikipedia...')
            statement =statement.replace("wikipedia", "")
            results = wikipedia.summary(statement, sentences=3)
            speak("According to Wikipedia")
            print(results)
            speak(results)
        elif 'open youtube' in statement:
            webbrowser.open_new_tab("https://www.youtube.com")
            speak("youtube is open now")
            time.sleep(5)

        elif 'open google' in statement:
            webbrowser.open_new_tab("https://www.google.com")
            speak("Google chrome is open now")
            time.sleep(5)

        elif 'open gmail' in statement:
            webbrowser.open_new_tab("gmail.com")
            speak("Google Mail open now")
            time.sleep(5)
        elif 'news' in statement:
            news = webbrowser.open_new_tab("”https://apnews.com/)
            speak('Here is AP NEWS ,Happy reading')
            time.sleep(6)

        elif "camera" in statement or "take a photo" in statement:
            ec.capture(0,"robo camera","img.jpg")
        elif 'search'  in statement:
            statement = statement.replace("search", "")
            webbrowser.open_new_tab(statement)
            time.sleep(5)	 
        elif 'ask' in statement:
            speak('I can answer to the smart questions you ask me .Try this feature on')
            question=takeCommand()
            app_id="Paste your unique ID here "
            client = wolframalpha.Client('R2K75H-7ELALHR35X')
            res = client.query(question)
            answer = next(res.results).text
            speak(answer)
            print(answer)
          elif 'who are you' in statement or 'what can you do' in statement:
            speak('I am Anubis , your personal assistant and most importantly a friend of yours. I am programmed to check on your health and do minor tasks like'
                  'opening youtube,google chrome, gmail and stackoverflow ,predict time,take a photo,search wikipedia,predict weather' 
                  'In different cities, get top headline news from AP news and you can ask me smart questions too!')


        elif "who made you" in statement or "who created you" in statement or "who discovered you" in statement:
            speak("I was built by Nikita and Doro")
            print("I was built by Nikita and Doro")   
        elif "weather" in statement:
            api_key="Apply your unique ID"
            base_url="https://api.openweathermap.org/data/2.5/weather?"
            speak("what is the city name")
            city_name=takeCommand()
            complete_url=base_url+"appid="+api_key+"&q="+city_name
            response = requests.get(complete_url)
            x=response.json()
            if x["cod"]!="404":
                y=x["main"]
                current_temperature = y["temp"]
                current_humidiy = y["humidity"]
                z = x["weather"]
                weather_description = z[0]["description"]
                speak(" Temperature in kelvin unit is " +
                      str(current_temperature) +
                      "\n humidity in percentage is " +
                      str(current_humidiy) +
                      "\n description  " +
                      str(weather_description))
                print(" Temperature in kelvin unit = " +
                      str(current_temperature) +
                      "\n humidity (in percentage) = " +
                      str(current_humidiy) +
                      "\n description = " +
                      str(weather_description))
